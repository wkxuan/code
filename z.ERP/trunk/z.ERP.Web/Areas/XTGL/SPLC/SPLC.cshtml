@using z.ERP.Web.Areas.Share.Render
@using z.ERP.Entities.Enum
@using z.ERP.Web.Areas.Layout.Empty
@inherits EmptyViewBase

@section head{
    <style>
        .drawer-footer {
            width: 100%;
            position: absolute;
            bottom: 0;
            left: 0;
            border-top: 1px solid #e8e8e8;
            padding: 10px 16px;
            text-align: right;
            background: #fff;
        }
    </style>
}

@{
    var billid = ViewBag.BILLID;
}

@section content{
    <row>
        <i-button v-on:click="add" disabled="CanAdd">添加</i-button>
        <i-button v-on:click="mod" disabled="CanModify">修改</i-button>
        <i-button v-on:click="save" disabled="CanSave">存档</i-button>
        <i-button v-on:click="quit" disabled="CanQuit">放弃</i-button>
        <i-button v-on:click="del" disabled="CanDel">删除</i-button>
        <i-button v-on:click="exec" disabled="CanExec">审核</i-button>
        <i-button v-on:click="over" disabled="CanOver">终止</i-button>
    </row>
    <row>
        <i-col span="2" class="RowTitle">
            记录编号
        </i-col>
        <i-col span="6">
            <i-input v-model="BILLID" v-on:on-enter="billEnter" :disabled="CanBillid"></i-input>
        </i-col>

        <i-col span="2" class="RowTitle">
            <span class="mustElement">*</span>
            菜单号
        </i-col>
        <i-col span="6">
            @{
                //未来为了方便可以用一个初始化表设置,为了控制可以用枚举类型处理，暂定枚举类型
                RenderControl(new EnumDropDownListRender<审批流程菜单号>()
                {
                    vModel = "MENUID",
                    Enable = false
                });
            }
        </i-col>

        <i-col span="2" class="RowTitle">
            状态
        </i-col>
        <i-col span="6">
            @{
                RenderControl(new TextBoxRender()
                {
                    vModel = "STATUSMC"
                });
            }
        </i-col>
    </row>
    <row>
        <i-button v-on:click="SpjdDef" :disabled="CanSpjdDef">流程节点</i-button>
        @*<i-button v-on:click="SpjdDel" :disabled="CanSpjdDef">删除流程节点</i-button>*@

        <Drawer title="流程节点"
                v-model="spjdDrawer"
                width="50%"
                @*styles="styles"
                closable="false"
                draggable="false"*@>

            @*节点信息数据维护*@
            <row>
                <i-col span="3" class="RowTitle">
                    <span class="mustElement">*</span>
                    节点名称
                </i-col>
                <i-col span="8">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "JDNAME",
                            Enable = false
                        });
                    }
                </i-col>
            </row>

            <row>
                <i-col span="3" class="RowTitle">
                    <span class="mustElement">*</span>
                    节点类型
                </i-col>
                <i-col span="8">
                    @{
                        RenderControl(new EnumDropDownListRender<审批流程节点类型>()
                        {
                            vModel = "JDTYPE",
                            Enable = false
                        });
                    }
                </i-col>
            </row>

            <row>
                <i-col span="3">
                    @{
                        RenderControl(new ButtonRender()
                        {
                            Click = "SelRole",
                            Text = "添加角色",
                            Enable = false,
                            Type = "primary",
                            Icon = "plus-circled"
                        });
                    }
                </i-col>

                <i-col span="8">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "ROLENAME",
                            Enable = true
                        });
                    }
                </i-col>
            </row>

            <row>
                <i-col span="8" class="RowTitle">
                    <span class="mustElement">*</span>
                    节点顺序(从1开始并且连续)
                </i-col>
                <i-col span="3">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "JDINX",
                            Enable = false
                        });
                    }
                </i-col>
            </row>
            <div class="drawer-footer">
                @{
                    RenderControl(new ButtonRender()
                    {
                        Click = "sureSpjd",
                        Text = "确认",
                        Enable = false,
                        Type = "primary"
                    });
                }

                @{
                    RenderControl(new ButtonRender()
                    {
                        Click = "cancelSpjd",
                        Text = "取消",
                        Enable = false,
                        Type = "primary"
                    });
                }
            </div>
        </Drawer>
        <i-button v-on:click="SpjdJg" :disabled="CanSpjdJg">流程节点步骤</i-button>
        @*<i-button v-on:click="SpjdJgDel" :disabled="CanSpjdJg">删除流程节点步骤</i-button>*@

        <Drawer title="流程节点步骤"
                v-model="spjdjgDrawer"
                width="50%"
                @*styles="styles"
                closable="false"
                draggable="false"*@>
            <row>
                <i-col span="3" class="RowTitle">
                    <span class="mustElement">*</span>
                    条件描述
                </i-col>
                <i-col span="8">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "TJMC",
                            Enable = false
                        });
                    }
                </i-col>
            </row>

            <row>
                <i-col span="3" class="RowTitle">
                    <span class="mustElement">*</span>
                    结果节点
                </i-col>
                <i-col span="8">
                    <i-select v-model="JGID" style="width:100%">
                        <i-option v-for="item in SPLCJD" :value="item.JDID" :key="item.JDID">{{ item.JDNAME }}</i-option>
                    </i-select>
                </i-col>
            </row>

            <row>
                <i-col span="3" class="RowTitle">
                    <span class="mustElement">*</span>
                    结果类型
                </i-col>
                <i-col span="8">
                    @{
                        RenderControl(new EnumDropDownListRender<审批结果类型>()
                        {
                            vModel = "JGTYPE",
                            Enable = false
                        });
                    }
                </i-col>
            </row>

            <row>
                <i-col span="3" class="RowTitle">
                    <span class="mustElement">*</span>
                    结果描述
                </i-col>
                <i-col span="8">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "JGMC",
                            Enable = false
                        });
                    }
                </i-col>
            </row>
            <div class="drawer-footer">
                @{
                    RenderControl(new ButtonRender()
                    {
                        Click = "sureSpjdjg",
                        Text = "确认",
                        Enable = false,
                        Type = "primary"
                    });
                }

                @{
                    RenderControl(new ButtonRender()
                    {
                        Click = "cancelSpjdjg",
                        Text = "取消",
                        Enable = false,
                        Type = "primary"
                    });
                }
            </div>
        </Drawer>
    </row>
    <row>
        <i-col span="10">

            @{
                RenderControl(new TableRender()
                {
                    Height = "450",
                    Size = "small",
                    Border = "true",
                    Columns = "colSplcjd",
                    Data = "SPLCJD",
                    Ref = "selectSplcjd",
                    Highlight = "true",
                    SelectOne = "selectSpjd",
                });
            }
        </i-col>

        <i-col span="14">

            @{
                RenderControl(new TableRender()
                {
                    Height = "300",
                    Size = "small",
                    Border = "true",
                    Columns = "colSplcjg",
                    Data = "SPLCJG",
                    Ref = "selectSplcjg"
                });
            }
            <row>
                <i-col span="2" class="RowTitle">
                    制单人
                </i-col>
                <i-col span="6">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "REPORTER_NAME"
                        });
                    }
                </i-col>

                <i-col span="4" class="RowTitle">
                    制单时间
                </i-col>
                <i-col span="6">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "REPORTER_TIME"
                        });
                    }
                </i-col>
            </row>

            <row>
                <i-col span="2" class="RowTitle">
                    审核人
                </i-col>
                <i-col span="6">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "VERIFY_NAME"
                        });
                    }
                </i-col>

                <i-col span="4" class="RowTitle">
                    审核时间
                </i-col>
                <i-col span="6">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "VERIFY_TIME"
                        });
                    }
                </i-col>
            </row>


            <row>
                <i-col span="2" class="RowTitle">
                    终止人
                </i-col>
                <i-col span="6">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "TERMINATE_NAME"
                        });
                    }
                </i-col>

                <i-col span="4" class="RowTitle">
                    终止时间
                </i-col>
                <i-col span="6">
                    @{
                        RenderControl(new TextBoxRender()
                        {
                            vModel = "TERMINATE_TIME"
                        });
                    }
                </i-col>
            </row>

        </i-col>
    </row>

    <row>
        <i-col>
            @{
                RenderControl(new PopsRender()
                {
                    vModel = "showPopRole",
                    Src = "srcPopRole",
                    Caption = "选择角色",
                    Width = "800"
                });
            }
        </i-col>
    </row>
}



@section foot{
    <script type="text/javascript">
        //应该提炼成一个模板,待后续处理
        var splc = new Vue({
            el: "#List_Main",
            data: {
                spjdDrawer: false,
                spjdjgDrawer: false,
                colSplcjd: [
                    { type: 'index', width: 60, align: 'center' },
                    { title: '节点名称', key: 'JDNAME', width: 200 },
                    { title: '类型', key: 'JDTYPENAME', width: 80 },
                    { title: '角色组', key: 'ROLENAME', width: 100 },
                    { title: '顺序', key: 'JDINX', width: 80, sortable: true }
                ],
                SPLCJD: [],

                colSplcjg: [
                   // { title: '结果ID', key: 'JGID', width: 100 },
                    { title: '条件描述', key: 'TJMC', width: 200 },
                    { title: '结果类型', key: 'JGTYPE', width: 100 },
                    { title: '类型名称', key: 'JGTYPENAME', width: 100 },
                    { title: '节点名称', key: 'JDNAMEXS', width: 200 },
                    { title: '结果描述', key: 'JGMC', width: 200 }
                ],
                SPLCJG: [],
                SPLCJGALL: [],
                disabled: false,
                BILLID: "",
                MENUID: "",
                JDNAME: "",
                JDTYPE: "",
                ROLEID: "",
                ROLENAME: "",
                JDINX: "",
                REPORTER_NAME: "",
                REPORTER_TIME: "",
                VERIFY_NAME: "",
                VERIFY_TIME: "",
                TERMINATE_NAME: "",
                TERMINATE_TIME: "",
                JDTYPENAME: "",
                TJMC: "",
                JGTYPE: "",
                JGMC: "",
                JGTYPENAME: "",
                JDID: "-1",
                JDNAMEXS: "",
                JGID: "",
                JGNANE: "",
                JDTYPESelect: "-1",
                STATUSMC: "",
                showPopRole: false,
                CanAdd: false,
                CanModify: true,
                CanSave: true,
                CanQuit: true,
                CanDel: true,
                CanExec: true,
                CanOver: true,
                CanSpjdDef: true,
                CanSpjdJg: true,
                CanBillid: false,
                srcPopRole: __BaseUrl + "/" + "Pop/Pop/PopRoleList/",
                OldBillid:""
            },
            mounted: function () {
                var _self = this;
                      if (@billid != -1) {
                        _self.srch(@billid);
                    };  

            },
            methods: {
                billEnter: function () {
                    if (this.BILLID != "") {
                        this.srch(this.BILLID);
                    }
                },
                add: function () {
                    this.ButtonEnable(true, true, true, true);
                    this.CanSpjdDef = false;
                    this.CanSpjdJg = false;
                    this.CanBillid = true;
                    if (this.BILLID!=""){
                       this.OldBillid=this.BILLID;
                    };
                    this.BILLID="";
                },
                mod: function () {
                    this.ButtonEnable(true, true, true, true);
                    this.CanSpjdDef = false;
                    this.CanSpjdJg = false;
                    this.CanBillid = true;
                    if (this.BILLID!=""){
                       this.OldBillid=this.BILLID;
                    };
                },
                isValidSave: function () {
                    if (this.MENUID == "") {
                        iview.Message.info("请选择流程设定菜单号!");
                        return false;
                    };
                    if (this.SPLCJD.length == 0) {
                        iview.Message.info("请维护流程节点!");
                        return false;
                    };
                    if (this.SPLCJGALL.length == 0) {
                        iview.Message.info("请维护流程节点步骤!");
                        return false;
                    };
                    return true;
                },
                save: function () {
                    var that = this;
                    if (!that.isValidSave()) {
                        return;
                    };
              
                    _.Ajax('Save', {
                        SPLCDEFD: { MENUID: this.MENUID },
                        SPLCJD: this.SPLCJD,
                        SPLCJG: this.SPLCJGALL
                    }, function (data) {
                        that.BILLID = data;
                        that.srch(that.BILLID);
                        iview.Message.info("保存成功!");

                        that.ButtonEnable(false, false, false, true);
                    });
                },
                srch: function (billid) {
                    var that = this;
                    _.Ajax('Srch', {
                        Data: { BILLID: billid }
                    }, function (data) {
                        that.BILLID = data.spd.BILLID;
                        that.MENUID = data.spd.MENUID;
                        that.STATUSMC = data.spd.STATUSMC;
                        that.REPORTER_NAME = data.spd.REPORTER_NAME;
                        that.REPORTER_TIME = data.spd.REPORTER_TIME;
                        that.VERIFY_NAME = data.spd.VERIFY_NAME;
                        that.VERIFY_TIME = data.spd.VERIFY_TIME;
                        that.TERMINATE_NAME = data.spd.TERMINATE_NAME;
                        that.TERMINATE_TIME = data.spd.TERMINATE_TIME;
                        that.SPLCJD = data.spjd;
                        that.SPLCJGALL = data.spjg;
                        let splcjg = [];
                        for (var i = 0; i <= data.spjg.length - 1; i++) {
                            if (data.spjg[i].JDTYPE == 1) {
                                splcjg.push(data.spjg[i]);
                            };
                        };
                        that.SPLCJG = splcjg;

                        //单号输入完之后当查到数据,根据数据信息控制按钮的可操作
                        let discanadd = false; //那种情况添加都是可以点的
                        let discanmodify = false;//初始化为修改可以点
                        if (that.VERIFY_NAME) {
                            discanmodify = true; //当审核了修改不可以点
                        };
                        let discanexec = true;
                        if (!that.VERIFY_NAME) {
                            discanexec = false;
                        };
                        let discanover = true;
                        if ((that.VERIFY_NAME) && (!that.TERMINATE_NAME)) {
                            discanover = false;
                        };
                        that.ButtonEnable(discanadd, discanmodify, discanexec, discanover);
                    });
                },
                quit: function () {
                    if (this.OldBillid!=""){
                        this.srch(this.OldBillid);
                    };
                    if (this.BILLID != "")
                        this.ButtonEnable(false, false, false, true);
                    else
                        this.ButtonEnable(false, true, true, true);
                },
                del: function () {
                    if (this.BILLID == "") {
                        iview.Message.info("请确认要删除的单号!");
                        return;
                    };
                    var that = this;
                    that.ButtonEnable(false, true, true, true);
                    _.Ajax('Delete', {
                        Data: { BILLID: that.BILLID }
                    }, function (data) {
                        //删除后界面清空
                        that.BILLID = "";
                        that.MENUID = "";
                        that.STATUSMC = "";
                        that.REPORTER_NAME = "";
                        that.REPORTER_TIME = "";
                        that.VERIFY_NAME = "";
                        that.VERIFY_TIME = "";
                        that.TERMINATE_NAME = "";
                        that.TERMINATE_TIME = "";
                        that.SPLCJD = [];
                        that.SPLCJGALL = [];
                        that.SPLCJG = [];
                        iview.Message.info("删除成功!");
                    });
                },
                exec: function () {
                    var that = this;
                    _.Ajax('exec', {
                        Data: { BILLID: that.BILLID }
                    }, function (data) {
                        that.BILLID = data;
                        that.srch(that.BILLID);
                        iview.Message.info("审核成功!");
                    });
                },
                over: function () {
                    var that = this;
                    _.Ajax('over', {
                        Data: { BILLID: that.BILLID }
                    }, function (data) {
                        that.BILLID = data;
                        that.srch(that.BILLID);
                        iview.Message.info("终止成功!");
                    });
                },
                SpjdDef: function () {
                    this.spjdDrawer = true;
                },
                sureSpjd: function () {

                    //判断节点数据合法性
                    //开始节点只能有一个,结束节点只能有一个
                    if (!this.JDNAME) {
                        iview.Message.info("请维护节点名称!");
                        return false;
                    };
                    if (!this.JDTYPE) {
                        iview.Message.info("请维护节点类型!");
                        return false;
                    };
                    if (!this.ROLENAME) {
                        iview.Message.info("请维护节点角色!");
                        return false;
                    };
                    if (!this.JDINX) {
                        iview.Message.info("请维护节点顺序!");
                        return false;
                    };
                    if (this.SPLCJD.length > 0) {
                        for (var i = 0; i < this.SPLCJD.length; i++) {
                            if (this.JDTYPE == 1) {
                                if (this.SPLCJD[i].JDTYPE == 1) {
                                    iview.Message.info("一个审批流程只能有一个开始节点!");
                                    return;
                                };
                            };
                            if (this.JDTYPE == 3) {
                                if (this.SPLCJD[i].JDTYPE == 3) {
                                    iview.Message.info("一个审批流程只能有一个结束节点!");
                                    return;
                                };
                            };
                            if (this.SPLCJD[i].JDINX == this.JDINX) {
                                iview.Message.info("当前的节点顺序已经存在!");
                                return;
                            };
                        };
                    };

                    if (this.JDTYPE == 1) {
                        this.JDTYPENAME = "开始";
                    } else if (this.JDTYPE == 2) {
                        this.JDTYPENAME = "表决";
                    } else if (this.JDTYPE == 3) {
                        this.JDTYPENAME = "结束";
                    };
                    let jdDataOne = {
                        JDNAME: this.JDNAME,
                        JDTYPE: this.JDTYPE,
                        ROLENAME: this.ROLENAME,
                        JDINX: this.JDINX,
                        ROLEID: this.ROLEID,
                        JDTYPENAME: this.JDTYPENAME,
                        JDID: this.JDINX
                    };
                    this.SPLCJD.push(jdDataOne);
                    this.spjdDrawer = false;
                },
                cancelSpjd: function () {
                    this.spjdDrawer = false;
                },

                selectSpjd: function (currentRow, oldCurrentRow) {
                    this.JDID = currentRow.JDID;

                    this.JDTYPESelect = currentRow.JDTYPE;

                    let splcjgLocal = [];
                    for (var i = 0; i <= this.SPLCJGALL.length - 1; i++) {
                        if (this.SPLCJGALL[i].JDID == this.JDID) {
                            splcjgLocal.push(this.SPLCJGALL[i]);
                        }
                    };
                    this.SPLCJG = [];
                    this.SPLCJG = splcjgLocal;
                },

                SpjdJg: function () {
                    if (this.SPLCJD.length == 0) {
                        iview.Message.info("请先定义审批流程节点!");
                        return;
                    };
                    //并且选中一条流程节点数据
                    if (parseInt(this.JDID) == -1) {
                        iview.Message.info("请先单击选择流程节点!");
                        return;
                    };
                    //if (this.JDTYPESelect == 3) {
                    //    iview.Message.info("节点类型为结束节点不需要定义节点步骤!");
                    //    return;
                    //};
                    this.spjdjgDrawer = true;
                },
                sureSpjdjg: function () {
                    if (!this.TJMC) {
                        iview.Message.info("请条件描述!");
                        return false;
                    };
                    if (!this.JGTYPE) {
                        iview.Message.info("请维护结果类型!");
                        return false;
                    };
                    if (!this.JGMC) {
                        iview.Message.info("请维护结果描述!");
                        return false;
                    };

                    if ((this.JDTYPESelect == 1) && (this.JGTYPE != 1)) {
                        iview.Message.info("节点类型为开始必须流程结果为通过!");
                        return false;
                    }
                    if (this.JGTYPE == 1) {
                        this.JGTYPENAME = "通过";
                    } else if (this.JGTYPE == 2) {
                        this.JGTYPENAME = "不通过";
                    };
                    for (var i = 0; i <= this.SPLCJD.length - 1; i++) {
                        if (this.JGID == this.SPLCJD[i].JDID) {
                            this.JDNAMEXS = this.SPLCJD[i].JDNAME;
                        };
                    };
                    let jgDataOne = {
                        JDID: this.JDID,
                        JDNAMEXS: this.JDNAMEXS,
                        JGID: this.JGID,
                        TJMC: this.TJMC,
                        JGTYPE: this.JGTYPE,
                        JGTYPENAME: this.JGTYPENAME,
                        JGMC: this.JGMC
                    };


                    this.SPLCJGALL.push(jgDataOne);
                    //把当前==this.JDID的数据重新给节点结果
                    let splcjgLocal = [];
                    for (var i = 0; i <= this.SPLCJGALL.length - 1; i++) {
                        if (this.SPLCJGALL[i].JDID == this.JDID) {
                            splcjgLocal.push(this.SPLCJGALL[i]);
                        }
                    };
                    this.SPLCJG = [];
                    this.SPLCJG = splcjgLocal;
                    this.spjdjgDrawer = false;
                },
                cancelSpjdjg: function () {
                    this.spjdjgDrawer = false;
                },
                SelRole: function () {
                    this.showPopRole = true;
                },
                ButtonEnable: function (b1, b2, b3, b4) {
                    this.CanAdd = b1;
                    this.CanModify = b2;
                    this.CanSave = (!b1);
                    this.CanQuit = (!b1);
                    this.CanDel = b2;
                    this.CanExec = b3;
                    this.CanOver = b4;
                },
                SpjdDel: function () {
                },
                SpjdJgDel: function () {
                }
            }
        });

        splc.popCallBack = function (data) {
            if (splc.showPopRole) {
                splc.showPopRole = false;
                for (var i = 0; i < data.sj.length; i++) {
                    splc.ROLEID = data.sj[i].ROLEID;
                    splc.ROLENAME = data.sj[i].ROLENAME;
                };
            };
        };
    </script>
}
